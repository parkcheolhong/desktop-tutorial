name: RepoPilot (Actions-only) MVP
on:
  issue_comment: { types: [created] }
  pull_request_review_comment: { types: [created] }
permissions: { contents: write, pull-requests: write }
jobs:
  repopilot:
    if: >
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/policy '))
      || (github.event_name == 'pull_request_review_comment' && startsWith(github.event.comment.body, '/policy '))
    runs-on: ubuntu-latest
    steps:
      - name: Guard (OWNER/MEMBER만 허용)
        if: >
          !contains(fromJson('["OWNER","MEMBER"]'), github.event.comment.author_association)
        run: echo "skip outsider" && exit 0

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Parse command
        id: parse
        run: |
          BODY="${{ github.event.comment.body }}"
          CMD=$(echo "$BODY" | sed -n 's#^/policy[[:space:]]\+\([^[:space:]]\+\).*#\1#p')
          ARG=$(echo "$BODY" | sed -n 's#^/policy[[:space:]]\+[^[:space:]]\+[[:space:]]\+\(.*\)$#\1#p')
          echo "cmd=$CMD" >> $GITHUB_OUTPUT
          echo "arg=$ARG" >> $GITHUB_OUTPUT

      - name: Apply change
        id: apply
        run: |
          chmod +x scripts/repopilot-apply.sh || true
          scripts/repopilot-apply.sh "${{ steps.parse.outputs.cmd }}" "${{ steps.parse.outputs.arg }}" || true
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          cat .repopilot-summary.txt >> $GITHUB_OUTPUT || true
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(repopilot): policy update via /policy"
          branch: "repopilot/${{ github.run_id }}"
          title: "chore(repopilot): policy update"
          body: |
            Command:
            ```
            ${{ github.event.comment.body }}
            ```
            ${{ steps.apply.outputs.summary }}
          labels: repopilot
